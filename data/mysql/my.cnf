[mysqld]
#skip-host-cache
#sql_mode = "STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
sql_mode = ''
skip-name-resolve
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
secure-file-priv=/var/lib/mysql-files
user=mysql
pid-file=/var/run/mysqld/mysqld.pid
#bind_address                    = 127.0.0.1 # Change to 0.0.0.0 to allow remote connections
max_allowed_packet              = 256M
max_connect_errors              = 1000000
skip_external_locking
skip_name_resolve
tmpdir                          = /tmp
default_storage_engine          = InnoDB
#innodb_buffer_pool_instances    = 4     # Use 1 instance per 1GB of InnoDB pool size - max is 64
#innodb_buffer_pool_size         = 4G    # Use up to 70-80% of RAM
#innodb_file_per_table           = 1
#innodb_flush_log_at_trx_commit  = 0
#innodb_flush_method             = O_DIRECT
#innodb_log_buffer_size          = 16M
#innodb_redo_log_capacity        = 1G
#innodb_sort_buffer_size         = 4M    # UPD - Defines how much data is read into memory for sorting operations before writing to disk (default is 1M / max is 64M)
##innodb_stats_on_metadata        = 0
                                        # contain CPU usage. E.g. if your system has 8 CPUs, try 6 or 7 and check
                                        # the overall load produced by MySQL/MariaDB.
##innodb_read_io_threads          = 64
##innodb_write_io_threads         = 64
#key_buffer_size                 = 24M   # UPD
#low_priority_updates            = 1
#concurrent_insert               = 2
#max_connections                 = 100   # UPD - Important: high no. of connections = high RAM consumption
#back_log                        = 512
##thread_cache_size               = 100
#thread_stack                    = 192K
#interactive_timeout             = 180
#wait_timeout                    = 180
#max_execution_time             = 90000 # Set a timeout limit for SELECT statements (value in milliseconds).
                                        # This option may be useful to address aggressive crawling on large sites,
                                        # but it can also cause issues (e.g. with backups). So use with extreme caution and test!
                                        # More info at: https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_execution_time
                                        # The variable is of type double, thus you can use subsecond timeout.
                                        # For example you can use value 0.01 for 10 milliseconds timeout.
                                        # More info at: https://mariadb.com/kb/en/aborting-statements/
#join_buffer_size                = 4M    # UPD
#read_buffer_size                = 3M    # UPD
#read_rnd_buffer_size            = 4M    # UPD
#sort_buffer_size                = 4M    # UPD
##table_definition_cache          = 40000 # UPD
##table_open_cache                = 40000 # UPD
#open_files_limit                = 60000 # UPD - This can be 2x to 3x the table_open_cache value or match the system's
#                                        # open files limit usually set in /etc/sysctl.conf and /etc/security/limits.conf
#                                        # In systemd managed systems this limit must also be set in:
#                                        # - /etc/systemd/system/mysql.service.d/override.conf (for MySQL 5.7+ in Ubuntu) or
#                                        # - /etc/systemd/system/mysqld.service.d/override.conf (for MySQL 5.7+ in CentOS) or
#                                        # - /etc/systemd/system/mariadb.service.d/override.conf (for MariaDB)
#                                        # otherwise changing open_files_limit will have no effect.
#                                        #
#                                        # To edit the right file execute:
#                                        # $ systemctl edit mysql (or mysqld or mariadb)
#                                        # and set "LimitNOFILE=" to something like 100000 or more (depending on your system limits for MySQL)
#                                        # or use "LimitNOFILE=infinity" for MariaDB only.
#                                        # Finally merge the changes with:
#                                        # $ systemctl daemon-reload; systemctl restart mysql (or mysqld or mariadb)
#max_heap_table_size             = 128M  # Increase to 256M or 512M if you have lots of temporary tables because of missing indices in JOINs
#tmp_table_size                  = 128M  # Use same value as max_heap_table_size
#ft_min_word_len                 = 3     # Minimum length of words to be indexed for search results
#disable_log_bin                 = 1     # Binary logging disabled by default
#                                        # that corresponds to your actual MySQL/MariaDB version.
#                                        # Remember to comment out the line with "disable_log_bin".
#log_error                       = /var/log/mysql/mysql_error.log
#log_queries_not_using_indexes   = 0     # Disabled on production
#long_query_time                 = 5
#slow_query_log                  = 0     # Disabled on production
#slow_query_log_file             = /var/lib/mysql/mysql_slow.log
##[mysqldump]
##quick
##quote_names
#max_allowed_packet              = 1024M
